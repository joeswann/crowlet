name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3 # Use a specific version
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }} # User/Org who triggered the workflow
      #     password: ${{ secrets.GITHUB_TOKEN }} # Automatically generated token

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # Image name format: ghcr.io/owner/repo
          tags: |
            # type=schedule # Example: add a scheduled tag if needed
            type=ref,event=branch # Tag 'latest' for default branch pushes
            type=ref,event=pr    # Tag 'pr-#' for pull request builds (optional)
            type=semver,pattern={{version}} # Tag with semantic version for Git tags (e.g., v1.2.3 -> 1.2.3)
            type=semver,pattern={{major}}.{{minor}} # Tag with major.minor for Git tags (e.g., v1.2.3 -> 1.2)
            type=semver,pattern={{major}} # Tag with major version for Git tags (e.g., v1.2.3 -> 1)
            type=sha # Tag with the git commit SHA (e.g., c1a2b3d)

      - name: Build and push Docker image (Multi-Arch)
        uses: docker/build-push-action@v6 # Use specific version
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # provenance: false # Optional: disable provenance if causing issues, but generally good to keep
